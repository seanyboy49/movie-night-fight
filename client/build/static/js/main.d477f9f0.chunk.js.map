{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["API_URI","App","useState","formValue","setFormValue","displayValue","setDisplayValue","e","a","preventDefault","fetch","method","body","JSON","stringify","headers","response","json","data","concat","console","log","useEffect","getData","className","value","onChange","target","onClick","map","v","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAIMA,G,MAGA,6CA6DSC,MA3Df,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNC,EADM,KACKC,EADL,OAE2BF,mBAAS,IAFpC,mBAENG,EAFM,KAEQC,EAFR,iDAmBb,WAA4BC,GAA5B,iBAAAC,EAAA,6DACED,EAAEE,iBADJ,kBAG2BC,MAAM,GAAD,OAAIV,EAAJ,UAAqB,CAC/CW,OAAQ,OACRC,KAAMC,KAAKC,UAAUX,GACrBY,QAAS,CACP,eAAgB,sBAPxB,cAGUC,EAHV,gBAWuBA,EAASC,OAXhC,OAWUC,EAXV,OAaIZ,EAAgBD,EAAac,OAAOD,IACpCd,EAAa,IAdjB,kDAgBIgB,QAAQC,IAAI,QAAZ,MAhBJ,2DAnBa,sBAuCb,OAnCAC,qBAAU,WAAM,4CACd,8BAAAd,EAAA,+EAE2BE,MAAM,GAAD,OAAIV,EAAJ,WAFhC,cAEUgB,EAFV,gBAGuBA,EAASC,OAHhC,OAGUC,EAHV,OAKIZ,EAAgBY,GALpB,kDAOIE,QAAQC,IAAI,QAAZ,MAPJ,2DADc,uBAAC,WAAD,wBAYdE,KACC,IAsBElB,EAGH,sBAAKmB,UAAU,MAAf,UACE,iCACE,uBACEC,MAAOtB,EACPuB,SAAU,SAACnB,GAAD,OAAOH,EAAaG,EAAEoB,OAAOF,UAEzC,wBAAQG,QAhDD,4CAgDP,uBAEF,8BACGvB,EAAawB,KAAI,SAACC,GAAD,OAChB,6BAAaA,GAAJA,WAbS,MCpCbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d477f9f0.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\nimport './App.css'\n\nconst API_URI =\n  process.env.NODE_ENV === 'development'\n    ? 'http://0.0.0.0:8000/api'\n    : 'https://movienightfight.herokuapp.com/api'\n\nfunction App() {\n  const [formValue, setFormValue] = useState([])\n  const [displayValue, setDisplayValue] = useState('')\n\n  useEffect(() => {\n    async function getData() {\n      try {\n        const response = await fetch(`${API_URI}/hello`)\n        const data = await response.json()\n\n        setDisplayValue(data)\n      } catch (error) {\n        console.log('error', error)\n      }\n    }\n\n    getData()\n  }, [])\n\n  async function handleSubmit(e) {\n    e.preventDefault()\n    try {\n      const response = await fetch(`${API_URI}/hello`, {\n        method: 'POST',\n        body: JSON.stringify(formValue),\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      })\n\n      const data = await response.json()\n\n      setDisplayValue(displayValue.concat(data))\n      setFormValue('')\n    } catch (error) {\n      console.log('error', error)\n    }\n  }\n\n  if (!displayValue) return null\n\n  return (\n    <div className=\"App\">\n      <form>\n        <input\n          value={formValue}\n          onChange={(e) => setFormValue(e.target.value)}\n        />\n        <button onClick={handleSubmit}>submit</button>\n      </form>\n      <div>\n        {displayValue.map((v) => (\n          <h4 key={v}>{v}</h4>\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}